using System.Runtime.InteropServices;
using DirectX;

namespace Application;


public class Program
{        


    public static void Main(string[] args)
    {
        DxcCompiler compiler = new DxcCompiler();

        string[] cArgs = new string[]
        {
            "vertshader.hlsl",         // Optional shader source file name for error reporting  
            "-E", "main",              // Entry point.
            "-T", "vs_6_0",            // Target.
            "-Zs",                     // Enable debug information (slim format)
            "-Fo", "myshader.bin",     // Optional. Stored in the pdb. 
            "-Fd", "myshader.pdb",     // The file name of the pdb. This must either be supplied
                                         // or the autogenerated file name must be used.
            "-Qstrip_reflect",          // Strip reflection into a separate blob. 
        };

        Console.WriteLine("Compiling shader");
        DxcResult result = compiler.Compile(ShaderCode.VertexCodeHlsl, cArgs);

        Exception? ex = result.GetStatus();

        if (ex != null)
        {
            if (result.GetTextOutput(OutKind.Errors, out string errors, out _))
                Console.WriteLine($"Error:{errors}");

            Console.WriteLine("Compilation failed");
            return;
        }

        Console.WriteLine("Compilation success");
    }
}

